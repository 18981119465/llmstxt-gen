name: Code Quality Gate

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Pre-commit hooks
  pre-commit:
    name: Pre-commit Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install pre-commit
      run: |
        pip install pre-commit
        
    - name: Run pre-commit
      run: |
        pre-commit run --all-files

  # Code Coverage Gate
  coverage-gate:
    name: Coverage Gate
    runs-on: ubuntu-latest
    needs: pre-commit
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install pytest pytest-cov
        
    - name: Run tests with coverage
      run: |
        cd backend
        pytest --cov=src --cov-report=xml --cov-report=term-missing --cov-fail-under=80
        
    - name: Check coverage threshold
      run: |
        cd backend
        coverage report --fail-under=80

  # Performance Tests
  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: pre-commit
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install locust pytest-benchmark
        
    - name: Run performance tests
      run: |
        cd backend
        python -m pytest benchmarks/ -v --benchmark-only
        
    - name: Generate performance report
      run: |
        cd backend
        python -m locust -f tests/locustfile.py --headless --users 10 --spawn-rate 2 --run-time 30s --html performance-report.html
        
    - name: Upload performance report
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: backend/performance-report.html

  # Dependency Security Scan
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    needs: pre-commit
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        cd backend
        pip install safety
        cd ../frontend
        npm install
        
    - name: Run Python dependency check
      run: |
        cd backend
        safety check --json --output safety-report.json || true
        
    - name: Run Node.js dependency check
      run: |
        cd frontend
        npm audit --json > audit-report.json || true
        
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          backend/safety-report.json
          frontend/audit-report.json

  # Code Quality Metrics
  code-metrics:
    name: Code Quality Metrics
    runs-on: ubuntu-latest
    needs: pre-commit
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install radon xenon
        
    - name: Calculate code metrics
      run: |
        cd backend
        radon src -a -nb
        xenon --max-absolute A --max-modules A --max-average A src
        
    - name: Generate complexity report
      run: |
        cd backend
        radon src -mi -o complexity-report.json
        
    - name: Upload complexity report
      uses: actions/upload-artifact@v3
      with:
        name: complexity-report
        path: backend/complexity-report.json